** JobTimer version 1


If (%1 = SetUp)

  Let x6 = 1 ** Activate the job timer
  Echo JobTimer Version 1

EndIf
****************************************************************************

Proc TimeInSeconds
** converts TP time into seconds

  Let jTime = %1
  Let jT1 = $String(@jTime, NextToken, ":")
  If(@jT1 = 0)
    Let jT1 = 24 ** It's midnight, go to bed!
  EndIf
  Let JT1 = @jT1 * 3600
  Let jT2 = $String(@jTime, NextToken, ":")
  Let jT2 = @jT2 * 60
  Let jT3 = @jTime

EndProc
****************************************************************************

Proc StartTimer

  Let jStartTime = $Time
  Echo Timer start at @jStartTime
  Let jMoveCount = 0

EndProc
****************************************************************************

Proc EndTimer

  Let jEndTime = $Time

  Call TimeInSeconds @jStartTime
  Let jStartTime = @jT1 + @jT2 + @jT3
  Call TimeInSeconds @jEndTime
  Let jEndTime = @jT1 + @jT2 + @jT3

  Let jElapsedTime = @jEndTime - @jStartTime
  Let jMinute = 0
  While(1 = 1)
    If(@jElapsedTime < 60)
      Break
    EndIf
    Let jElapsedTime = @jElapsedTime - 60
    Let jMinute = @jMinute + 1
  EndWhile
  If(@jElapsedTime < 10)
    Let jElapsedTime = 0@jElapsedTime
  EndIf
  Let jNote = $Set(@messageBundle, Get, 12) @jMinute + ":" + @jElapsedTime \n$Set(@messageBundle, Get, 13) @jMoveCount
  Call $msgbox(@jNote)

EndProc
****************************************************************************

Proc JobTimerStart
** Starts and stops this subroutine

  If(@jTimer <> 1)
    Call StartTimer
    Clock Reset
    Clock Start
    Let jTimer = 1
  Else
    Clock Stop
    Call EndTimer
    Let jTimer = 0
  EndIf

EndProc
****************************************************************************
