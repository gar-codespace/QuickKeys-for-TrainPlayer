** TurnTable version 2

** How to:
  ** Add a command box
  ** Edit in script editor
  ** press record
  ** manually move the turntable around
  ** copy from command box into Turntable Matrices note window
  ** edit to add turntable lead number or letter, IE
  ** Edit:
  ** rotate 1 386
  ** Into:
  ** rotate d 1 386

  ** after the Turntable matrices note is finished,
  ** press apply
  ** save the layout
  ** restart the master script

If (%1 = SetUp)
  Let x4 = 1
  Let ttNoteText = $Note(%2)
** Make a LUT
  Let tAlpha = 0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,
  Let tNumeric = 48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,

  Call SetUpTurntable

  Echo TurnTable Version 2
  
EndIf
****************************************************************************

Proc SetUpTurntable
** Read in the Turntable Matrices SC note

  Let ttMatrix = ""
  While(@ttNoteText <> "")
    Let tLine = $String(@ttNoteText, NextToken, @xCR)
    If ($String(@tLine, Contains, "rotate") = 1)
      Call $String(@tLine, NextToken, " ") ** Strip off the word 'rotate'

      Let tL = $String(@tLine, NextToken, " ") ** the alpha character of the track Lead in ttNoteText
      Let tL = $Set(@tAlpha, Find, @tL) ** the index of the alpha character
      Let tL = $Set(@tNumeric, Get, @tL) ** the key number of the alpha character

      Let tT = "T" + $String(@tLine, NextToken, " ") ** add a 'T' to the Table ID number
      Let tJ = "J" + @tLine ** add a 'J' to the junction number
    
      Let ttMatrix = $Set(@ttMatrix, Add, @tT)
      Let ttMatrix = $Set(@ttMatrix, Add, @tL)
      Let ttMatrix = $Set(@ttMatrix, Add, @tJ) ** format: Table,Lead,Junction

    EndIf
  EndWhile

EndProc
****************************************************************************

Proc CancelTurnTable

  Call NoteWindow
  Echo Turntable canceled
  View Refresh

EndProc
****************************************************************************

Proc SelectDirection
  
  On Key
    Echo Checking direction...

    If(@x4 = 1)
      Call CancelTurnTable
      Exit
    Endif

    Let tMessage = $Set(@messageBundle, Get, 14) + "\n"
    Let tMessage = @tMessage + $Set(@messageBundle, Get, 15) + " " + @tLead + "\n"
    Let tMessage = @tMessage + $Set(@messageBundle, Get, 17) + " " + @tStall + "\n\n"
    
    If ($Key = 65)
      Rotate @tTable @tTrack CCW
      Echo Align @tTable to @tTrack CCW
      Let tMessage = @tMessage + $Set(@messageBundle, Get, 19) + "\n"
    ElseIf ($Key = 67)
      Rotate @tTable @tTrack CW
      Echo Align @tTable to @tTrack CW
      Let tMessage = @tMessage + $Set(@messageBundle, Get, 19) + "\n"
    Else
      Let T = 0
      Let tMessage = @tMessage + $Set(@messageBundle, Get, 18) + "\n"

    EndIf
    Call NoteWindow @tMessage

EndProc
****************************************************************************

Proc SelectStall

  On Key
    Echo Checking lead...

    If(@x4 = 1)
      Call CancelTurnTable
      Exit
    Endif

    Let T = 0
    Let i = 0
    While (@i < $Set(@ttMatrix, Count))
      If ($Set(@ttMatrix, Get, @i) = @tTable)
        Let kIndex = @i + 1
        If ($Set(@ttMatrix, Get, @kIndex) = $Key)

          Let x = $Set(@tNumeric, Find, $Key)
          Let tStall = $Set(@tAlpha, Get, @x)

          Let tMessage = $Set(@messageBundle, Get, 14) + "\n"
          Let tMessage = @tMessage + $Set(@messageBundle, Get, 15) + " " + @tLead + "\n"
          Let tMessage = @tMessage + $Set(@messageBundle, Get, 17) + " " + @tStall + "\n\n"
          Let tMessage = @tMessage + $Set(@messageBundle, Get, 18) + "\n"
          Call NoteWindow @tMessage

          Let sIndex = @i + 2
          Let tTrack = $Set(@ttMatrix, Get, @sIndex)
          Let T = 1
          Break

        EndIf
      EndIf
      Let i = @i + 1
    EndWhile
    Call NoteWindow @tMessage

EndProc
****************************************************************************

Proc TurnTableOperate

  If ($Set(@ttMatrix, Contains, $Key) = 1) ** a valid lead is selected
    Call NoteWindow
    Let x4 = 2 ** TurnTable is in process

    Let x = $Set(@tNumeric, Find, $Key)
    Let tLead = $Set(@tAlpha, Get, @x)

    Let tMessage = $Set(@messageBundle, Get, 14) + "\n"
    Let tMessage = @tMessage + $Set(@messageBundle, Get, 15) + " " + @tLead + "\n"
    Let tMessage = @tMessage + $Set(@messageBundle, Get, 16) + "\n"
    Call NoteWindow @tMessage

    Let lIndex = $Set(@ttMatrix, Find, $Key) ** index of TT lead
    Let tIndex = @lIndex - 1
    Let tTable = $Set(@ttMatrix, Get, @tIndex)

    ReselectStall:
    Call SelectStall
    If (@T = 0)
      Echo Reselect Stall
      GoTo ReselectStall
    EndIf

    ReselectDirection:
    Call SelectDirection
    If (@T = 0)
      Echo Reselect Direction
      GoTo ReselectDirection
    EndIf

  Else
    Echo Select a valid lead
  EndIf

  On TableStop
    Call NoteWindow
    Let x4 = 1
    View Refresh

EndProc
****************************************************************************

