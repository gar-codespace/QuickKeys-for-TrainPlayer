** RandomRoads version 2


If (%1 = SetUp)

  Let x7 = 1
  Call aarGetter
  Echo RandomRoads Version 2

EndIf
****************************************************************************

proc aarGetter
** Make AAR lists to prep for layout export to JMRI

  If (@NoteForRandomRoads = 0)
    Echo No note assigned to Random Roads
    Return
  EndIf

  Echo Getting select Random Roads AAR data

  Let inputData = $Note(@NoteForRandomRoads)

  Call $String(@inputData, NextToken, @xCR)
  Call $String(@inputData, NextToken, @xCR)
  Call $String(@inputData, NextToken, @xCR)
  Call $String(@inputData, NextToken, @xCR)
  Call $String(@inputData, NextToken, @xCR)
  Call $String(@inputData, NextToken, @xCR)
  Call $String(@inputData, NextToken, @xCR)
  Call $String(@inputData, NextToken, @xCR)
  Call $String(@inputData, NextToken, @xCR)
  Call $String(@inputData, NextToken, @xCR)

  Let Aar_engine = $String(@inputData, NextToken, @xCR)
  Call $String(@Aar_Engine, NextToken, " ")

  Let Aar_caboose = $String(@inputData, NextToken, @xCR)
  Call $String(@Aar_Caboose, NextToken, " ")

  Let Aar_mow = $String(@inputData, NextToken, @xCR)
  Call $String(@Aar_mow, NextToken, " ")

  Call $String(@inputData, NextToken, @xCR)
  Call $String(@inputData, NextToken, @xCR)
  Call $String(@inputData, NextToken, @xCR)
  Call $String(@inputData, NextToken, @xCR)

  Let Aar_passenger = $String(@inputData, NextToken, @xCR)
  Call $String(@Aar_passenger, NextToken, " ")

  Let Aar_express = $String(@inputData, NextToken, @xCR)
  Call $String(@Aar_express, NextToken, " ")

  Let inputData = ""

EndProc
*********************************************

Proc ApplyRandomRoads
Echo o2o Utility - Assign random road names and numbers to rolling stock

  ** Input noteId $Set(@messageBundle, Get, 3)
  ** Let inputData = $Note(@noteId)

  Let inputData = $Note(@NoteForRandomRoads)

  Let message = $Set(@messageBundle, Get, 4)
  Let toggleAll = $msgbox("YN", @message)

  Echo Working on it......

  Call NoteParser

  If (@toggleAll = 1)
    Let allCarIds = $Layout(IDSet, CarIds)
  EndIf
  If (@toggleAll = 0)
    Let allCarIds = $Train($Train, CarIds)
  EndIf

  While ($Set(@allCarIds, Count) > 0)

    Let rsId = $String(@allCarIds, NextToken, ",")
    Let rsAar = $Car(@rsId, AAR)

  ** Relabel engine equipment
    If ($Set(@RR21_ENGINE_AAR, Contains, @rsAar) = 1)
      Let roadNumberLength = @RR61_HOME_LENGTH
      Let workingPool = @RR02_HOME_ROADS
      Let eqptNamesLen = $Set(@RR02_HOME_ROADS, Count) - 1
      Call RelabelRollingStock
    EndIf

  ** Relabel caboose equipment
    If ($Set(@RR22_CABOOSE_AAR, Contains, @rsAar) = 1)
      Let roadNumberLength = @RR61_HOME_LENGTH
      Let workingPool = @RR02_HOME_ROADS
      Let eqptNamesLen = $Set(@RR02_HOME_ROADS, Count) - 1
      Call RelabelRollingStock
    EndIf

  ** Relabel MOW equipment
    If ($Set(@RR23_MW_AAR, Contains, @rsAar) = 1)
      Let roadNumberLength = @RR43_MW_LENGTH
      Let workingPool = @RR01_OPERATING_ROAD
      Let eqptNamesLen = $Set(@RR01_OPERATING_ROAD, Count) - 1
      Call RelabelRollingStock MoW
    EndIf

  ** Relabel pool equipment
    If ($Set(@RR31_MANIFEST_AAR, Contains, @rsAar) = 1)
      Let roadNumberLength = @RR63_FREIGHT_LENGTH
      Let workingPool = @RR03_MANIFEST_POOL
      Let eqptNamesLen = $Set(@RR03_MANIFEST_POOL, Count) - 1
      Call RelabelRollingStock
    EndIf

  ** Relabel reefer equipment
    If ($Set(@RR32_REEFER_AAR, Contains, @rsAar) = 1)
      Let roadNumberLength = @RR63_FREIGHT_LENGTH
      Let workingPool = @RR04_REEFER_POOL
      Let eqptNamesLen = $Set(@RR04_REEFER_POOL, Count) - 1
      Call RelabelRollingStock
    EndIf

  ** Relabel tank equipment
    If ($Set(@RR33_TANK_AAR, Contains, @rsAar) = 1)
      Let roadNumberLength = @RR63_FREIGHT_LENGTH
      Let workingPool = @RR05_TANK_POOL
      Let eqptNamesLen = $Set(@RR05_TANK_POOL, Count) - 1
      Call RelabelRollingStock
    EndIf

  ** Relabel hopper equipment
    If ($Set(@RR34_HOPPER_AAR, Contains, @rsAar) = 1)
      Let roadNumberLength = @RR63_FREIGHT_LENGTH
      Let workingPool = @RR06_HOPPER_POOL
      Let eqptNamesLen = $Set(@RR06_HOPPER_POOL, Count) - 1
      Call RelabelRollingStock
    EndIf

  ** Relabel passenger equipment
    If ($Set(@RR41_PASS_AAR, Contains, @rsAar) = 1)
      Let roadNumberLength = @RR62_PASS_LENGTH
      Let workingPool = @RR02_HOME_ROADS
      Let eqptNamesLen = $Set(@RR02_HOME_ROADS, Count) - 1
      Call RelabelRollingStock
    EndIf

  ** Relabel express equipment
    If ($Set(@RR42_EXPRESS_AAR, Contains, @rsAar) = 1)
      Let roadNumberLength = @RR62_PASS_LENGTH
      Let workingPool = @RR02_HOME_ROADS
      Let eqptNamesLen = $Set(@RR02_HOME_ROADS, Count) - 1
      Call RelabelRollingStock
    EndIf

  ** Relabel special 1
    If ($Set(@RR51_SPECIAL_1_AAR, Contains, @rsAar) = 1)
      Let roadNumberLength = @RR63_FREIGHT_LENGTH
      Let workingPool = @RR07_SPECIAL_1_Pool
      Let eqptNamesLen = $Set(@RR07_SPECIAL_1_Pool, Count) - 1
      Call RelabelRollingStock
    EndIf

  ** Relabel special 2
    If ($Set(@RR52_SPECIAL_2_AAR, Contains, @rsAar) = 1)
      Let roadNumberLength = @RR63_FREIGHT_LENGTH
      Let workingPool = @RR07_SPECIAL_2_POOL
      Let eqptNamesLen = $Set(@RR07_SPECIAL_2_POOL, Count) - 1
      Call RelabelRollingStock
    EndIf

  ** Relabel special 3
    If ($Set(@RR53_SPECIAL_3_AAR, Contains, @rsAar) = 1)
      Let roadNumberLength = @RR63_FREIGHT_LENGTH
      Let workingPool = @RR08_SPECIAL_3_POOL
      Let eqptNamesLen = $Set(@RR08_SPECIAL_3_POOL, Count) - 1
      Call RelabelRollingStock
    EndIf

  EndWhile

  Echo Random Roads complete

  View Refresh

EndProc
*********************************************

Proc RandomNumber
** Generate a random road number

  Let result = ""

  Local length
  Let length = %1

  Local i
  Let i = 0
  While (@i < length)
    Let a = $Rand(0, 9)
    Let result = @a@@result
    Let i = @i + 1
  EndWhile

EndProc
*********************************************

Proc RelabelRollingStock
** Relabel the rolling stock with the randomly generated road and number.
** For now seperator is hard coded as whitespace.
** SUFFIX can be something like '-MoW' but NOT a number.

  Let SEPERATOR = " "
  Let SUFFIX = %1
  Let randomRoadIndex = $Rand(0, @eqptNamesLen)
  Let randomRoad = $Set(@workingPool, Get, @randomRoadIndex)
  Call RandomNumber @roadNumberLength
  Let $Car(@rsId, Label) = @randomRoad@@SUFFIX@@SEPERATOR@@result

EndProc
*********************************************

Proc NoteParser
** Parses the Random Roads - Source Data SC note

Call $String(@inputData, NextToken, @xCR)

** Get the road name sets for equipment types

  Let x = $String(@inputData, NextToken, @xCR)
  Call $String(@x, NextToken, " ")
  Let RR01_OPERATING_ROAD = @x

  Let x = $String(@inputData, NextToken, @xCR)
  Call $String(@x, NextToken, " ")
  Let RR02_HOME_ROADS = @x

  Let x = $String(@inputData, NextToken, @xCR)
  Call $String(@x, NextToken, " ")
  Let RR03_MANIFEST_POOL = @x

  Let x = $String(@inputData, NextToken, @xCR)
  Call $String(@x, NextToken, " ")
  Let RR04_REEFER_POOL = @x

  Let x = $String(@inputData, NextToken, @xCR)
  Call $String(@x, NextToken, " ")
  Let RR05_TANK_POOL = @x

  Let x = $String(@inputData, NextToken, @xCR)
  Call $String(@x, NextToken, " ")
  Let RR06_HOPPER_POOL = @x

  Let x = $String(@inputData, NextToken, @xCR)
  Call $String(@x, NextToken, " ")
  Let RR07_SPECIAL_1_Pool = @x

  Let x = $String(@inputData, NextToken, @xCR)
  Call $String(@x, NextToken, " ")
  Let RR08_SPECIAL_2_Pool = @x

  Let x = $String(@inputData, NextToken, @xCR)
  Call $String(@x, NextToken, " ")
  Let RR09_SPECIAL_3_Pool = @x

** Get the AAR sets for each equipment type

  Let x = $String(@inputData, NextToken, @xCR)
  Call $String(@x, NextToken, " ")
  Let RR21_ENGINE_AAR = @x

  Let x = $String(@inputData, NextToken, @xCR)
  Call $String(@x, NextToken, " ")
  Let RR22_CABOOSE_AAR = @x

  Let x = $String(@inputData, NextToken, @xCR)
  Call $String(@x, NextToken, " ")
  Let RR23_MW_AAR = @x

  Let x = $String(@inputData, NextToken, @xCR)
  Call $String(@x, NextToken, " ")
  Let RR31_MANIFEST_AAR = @x

  Let x = $String(@inputData, NextToken, @xCR)
  Call $String(@x, NextToken, " ")
  Let RR32_REEFER_AAR = @x

  Let x = $String(@inputData, NextToken, @xCR)
  Call $String(@x, NextToken, " ")
  Let RR33_TANK_AAR = @x

  Let x = $String(@inputData, NextToken, @xCR)
  Call $String(@x, NextToken, " ")
  Let RR34_HOPPER_AAR = @x

  Let x = $String(@inputData, NextToken, @xCR)
  Call $String(@x, NextToken, " ")
  Let RR41_PASS_AAR = @x

  Let x = $String(@inputData, NextToken, @xCR)
  Call $String(@x, NextToken, " ")
  Let RR42_EXPRESS_AAR = @x

  Let x = $String(@inputData, NextToken, @xCR)
  Call $String(@x, NextToken, " ")
  Let RR51_SPECIAL_1_AAR = @x

  Let x = $String(@inputData, NextToken, @xCR)
  Call $String(@x, NextToken, " ")
  Let RR52_SPECIAL_2_AAR = @x

  Let x = $String(@inputData, NextToken, @xCR)
  Call $String(@x, NextToken, " ")
  Let RR53_SPECIAL_3_AAR = @x

** Get the equipmant number lengths

  Let x = $String(@inputData, NextToken, @xCR)
  Call $String(@x, NextToken, " ")
  Let RR61_HOME_LENGTH = @x

  Let x = $String(@inputData, NextToken, @xCR)
  Call $String(@x, NextToken, " ")
  Let RR62_PASS_LENGTH = @x

  Let x = $String(@inputData, NextToken, @xCR)
  Call $String(@x, NextToken, " ")
  Let RR63_FREIGHT_LENGTH = @x

  Let x = $String(@inputData, NextToken, @xCR)
  Call $String(@x, NextToken, " ")
  Let RR64_MW_LENGTH = @x

EndProc
*********************************************
